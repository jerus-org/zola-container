version: 2.1

parameters:
  zola-version:
    type: string
    default: "0.19.2"
  fingerprint:
    type: string
    default: SHA256:OkxsH8Z6Iim6WDJBaII9eTT9aaO1f3eDc6IpsgYYPVg
  validation-flag:
    type: boolean
    default: false
    description: "If true, the validation pipeline will be executed."
  success-flag:
    type: boolean
    default: false
    description: "If true, the success pipeline will be executed."

orbs:
  toolkit: jerus-org/circleci-toolkit@2.0.0

executors:
  ubuntu:
    docker:
      - image: cimg/base:current
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
  zola-env:
    docker:
      - image: jerusdp/ci-zola:<<pipeline.parameters.zola-version>>

commands:
  make-test:
    parameters:
      zola-version:
        default: "0.19.2"
        type: string
    steps:
      - run:
          name: make test for minimum version <<parameters.zola-version>>
          command: |
            REPO=jerusdp/ci-zola
            TAG=<<parameters.zola-version>>
            docker build --build-arg ZOLA_VERSION=<<parameters.zola-version>> -t ${REPO}/test:${TAG} --target test .
            docker run --rm ${REPO}/test:${TAG}

  publish_rust_env:
    parameters:
      zola-version:
        default: "0.19.2"
        type: string
    steps:
      - run:
          name: Publish for version <<parameters.zola-version>>
          command: |
            REPO=jerusdp/ci-zola
            TAG=<<parameters.zola-version>>
            INPUT_RELEASE_VERSION=0.1.0
            docker build --build-arg ZOLA_VERSION=<<parameters.zola-version>> -t ${REPO}:${TAG} --target final .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push ${REPO}:${TAG}

jobs:
  test:
    parameters:
      zola-version:
        type: string
    executor: ubuntu
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - make-test:
          zola-version: << parameters.zola-version >>

  publish_rustc_version:
    parameters:
      zola-version:
        type: string
    executor: ubuntu
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - publish_rust_env:
          zola-version: << parameters.zola-version >>

workflows:
  check_last_commit:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>

    jobs:
      - toolkit/choose_pipeline:
          filters:
            branches:
              ignore: main
          name: choose pipeline based on committer
          context: bot-check

  validation:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - << pipeline.parameters.validation-flag >>
    jobs:
      - toolkit/label:
          zola_version: << pipeline.parameters.zola-version >>
          context: pcu-app
          filters:
            branches:
              only:
                - main
      - test:
          filters:
            branches:
              ignore: main
          matrix: &matrix
            parameters:
              zola-version: ["0.19.2"]
      - toolkit/update_changelog:
          requires:
            - test
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          zola_version: << pipeline.parameters.zola-version >>

  on_success:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>

    jobs:
      - toolkit/end_success

  check_rebase:
    when:
      not:
        equal: [scheduled_pipeline, << pipeline.trigger_source >>]
    jobs:
      - toolkit/label:
          filters:
            branches:
              only: main
          ZOLA_VERSION: << pipeline.parameters.zola-version >>
          context:
            - bot-check

  release:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal: ["release check", << pipeline.schedule.name >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
    jobs:
      - toolkit/make_release:
          requires:
            - publish_rustc_version
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          zola_version: << pipeline.parameters.zola-version >>
          when_cargo_release: false
          pcu_update_changelog: true
          pcu_verbosity: "-vvvv"
      - publish_rustc_version:
          matrix:
            <<: *matrix
